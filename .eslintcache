[{"D:\\test_poc\\react\\ReactTest\\src\\common\\Header\\Index.jsx":"1","D:\\test_poc\\react\\ReactTest\\src\\pages\\Student\\AddEdit.jsx":"2","D:\\test_poc\\react\\ReactTest\\src\\pages\\Dashboard\\Index.jsx":"3","D:\\test_poc\\react\\ReactTest\\src\\common\\Header\\NavBar.jsx":"4","D:\\test_poc\\react\\ReactTest\\src\\redux\\subject\\type.js":"5","D:\\test_poc\\react\\ReactTest\\src\\redux\\subject\\reducer.js":"6","D:\\test_poc\\react\\ReactTest\\src\\redux\\subject\\action.js":"7","D:\\test_poc\\react\\ReactTest\\src\\utils\\react-redux-hooks.js":"8","D:\\test_poc\\react\\ReactTest\\src\\pages\\Teacher\\AddEdit.jsx":"9","D:\\test_poc\\react\\ReactTest\\src\\services\\student.service.js":"10","D:\\test_poc\\react\\ReactTest\\src\\redux\\teacher\\action.js":"11","D:\\test_poc\\react\\ReactTest\\src\\pages\\Student\\Index.jsx":"12","D:\\test_poc\\react\\ReactTest\\src\\pages\\Teacher\\Index.jsx":"13","D:\\test_poc\\react\\ReactTest\\src\\pages\\Student\\Detail.jsx":"14"},{"size":142,"mtime":1608370273343,"results":"15","hashOfConfig":"16"},{"size":6662,"mtime":1608813822823,"results":"17","hashOfConfig":"16"},{"size":3176,"mtime":1608813001546,"results":"18","hashOfConfig":"16"},{"size":3331,"mtime":1608813791541,"results":"19","hashOfConfig":"16"},{"size":57,"mtime":1608811245888,"results":"20","hashOfConfig":"16"},{"size":362,"mtime":1608811308272,"results":"21","hashOfConfig":"16"},{"size":411,"mtime":1608811548218,"results":"22","hashOfConfig":"16"},{"size":234,"mtime":1608370273372,"results":"23","hashOfConfig":"16"},{"size":4316,"mtime":1608813829842,"results":"24","hashOfConfig":"16"},{"size":1285,"mtime":1608370273365,"results":"25","hashOfConfig":"16"},{"size":1696,"mtime":1608370273362,"results":"26","hashOfConfig":"16"},{"size":544,"mtime":1608370273351,"results":"27","hashOfConfig":"16"},{"size":535,"mtime":1608370273355,"results":"28","hashOfConfig":"16"},{"size":4567,"mtime":1608467163397,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"pl13vr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\test_poc\\react\\ReactTest\\src\\common\\Header\\Index.jsx",[],["62","63"],"D:\\test_poc\\react\\ReactTest\\src\\pages\\Student\\AddEdit.jsx",["64"],"import { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  CssBaseline,\r\n  makeStyles,\r\n  Typography,\r\n  TextField,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { studentAction } from '../../redux/student/action';\r\nimport { useDispatch } from '../../utils/react-redux-hooks';\r\nimport { subjectAction } from '../../redux/subject/action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nconst AddEdit = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const initialValues = {\r\n    name: '',\r\n    address: '',\r\n    subjects: []\r\n  };\r\n  const { id } = match.params;\r\n  const isAddMode = !id;\r\n\r\n  const classes = useStyles();\r\n\r\n  let [subjects, setSubjects] = useState([]);\r\n\r\n  subjects = useSelector((state) => state.subject.subjects);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Required'),\r\n    address: Yup.string().required('Required')\r\n  });\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    if (isAddMode) {\r\n      createUser(fields, setSubmitting);\r\n    } else {\r\n      updateUser(id, fields, setSubmitting);\r\n    }\r\n  }\r\n\r\n  function createUser(fields, setSubmitting) {\r\n    const selectedSubject = subjects.filter((s) => s.ischecked);\r\n    const newStudent = {\r\n      id: uuidv4(),\r\n      name: fields.name,\r\n      address: fields.address,\r\n      subject: !selectedSubject ? [] : selectedSubject.map((x) => x.id)\r\n    };\r\n    dispatch(studentAction.addStudent(newStudent));\r\n    history.push('/student');\r\n  }\r\n\r\n  function updateUser(id, fields, setSubmitting) {}\r\n\r\n  const handleCheckBoxClick = (e) => {\r\n    subjects.forEach((subject) => {\r\n      if (subject.id === +e.target.value) {\r\n        subject.ischecked = e.target.checked;\r\n      }\r\n    });\r\n    setSubjects(subjects);\r\n  };\r\n\r\n  const initDispatch = () => {\r\n    dispatch(subjectAction.getAllSubject());\r\n  };\r\n\r\n  useEffect(() => {\r\n    initDispatch();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Add Student\r\n              </Typography>\r\n              <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n              >\r\n                {(props) => {\r\n                  const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit\r\n                  } = props;\r\n                  return (\r\n                    <form\r\n                      className={classes.form}\r\n                      noValidate\r\n                      onSubmit={handleSubmit}\r\n                    >\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        autoComplete=\"Name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={errors.name && touched.name && errors.name}\r\n                        autoFocus\r\n                      />\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"address\"\r\n                        label=\"Address\"\r\n                        name=\"address\"\r\n                        autoComplete=\"Address\"\r\n                        value={values.address}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={errors.name && touched.name && errors.name}\r\n                        autoFocus\r\n                      />\r\n                      <br />\r\n                      <Typography variant=\"h6\">Add / Modify Subject</Typography>\r\n                      <ul className=\"subject\">\r\n                        {subjects.map((subject) => {\r\n                          return (\r\n                            <CheckBox\r\n                              key={subject.id}\r\n                              handleCheckBoxClick={handleCheckBoxClick}\r\n                              {...subject}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                      <Button\r\n                        style={{ marginRight: '10px' }}\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={() => history.push('/student')}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n            </div>\r\n          </Container>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { AddEdit };\r\n\r\nconst CheckBox = (props) => {\r\n  return (\r\n    <li>\r\n      <input\r\n        key={props.id}\r\n        onClick={props.handleCheckBoxClick}\r\n        type=\"checkbox\"\r\n        checked={props.ischecked}\r\n        value={props.id}\r\n      />{' '}\r\n      {props.name}\r\n    </li>\r\n  );\r\n};\r\n","D:\\test_poc\\react\\ReactTest\\src\\pages\\Dashboard\\Index.jsx",["65","66"],"import { Grid, Paper, Typography } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from '../../utils/react-redux-hooks';\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: 'white',\r\n    overflow: 'hidden',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: '0 400px',\r\n    paddingBottom: 200\r\n  },\r\n  grid: {\r\n    width: 1200,\r\n    marginTop: 40\r\n  },\r\n  paper: {\r\n    padding: 3,\r\n    textAlign: 'left'\r\n  },\r\n  paperAlign: {\r\n    padding: '20px',\r\n    background: '#FFBF55',\r\n    '&:hover': {\r\n      background: 'green'\r\n    }\r\n  },\r\n  rangeLabel: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    paddingTop: 2\r\n  },\r\n  topBar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: 32\r\n  },\r\n  blockCenter: {\r\n    padding: 2,\r\n    textAlign: 'center'\r\n  },\r\n  block: {\r\n    padding: 2\r\n  },\r\n  box: {\r\n    marginBottom: 40,\r\n    height: 65\r\n  }\r\n});\r\n\r\nexport const Dashboard = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (text) => {\r\n    if (text === 'teacher') {\r\n      history.push('/teacher');\r\n    } else if (text === 'student') {\r\n      history.push('/student');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      style={{\r\n        height: '500px'\r\n      }}\r\n    >\r\n      <Grid\r\n        spacing={4}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        container\r\n        className={classes.grid}\r\n      >\r\n        <Grid item xs={12} md={4}>\r\n          <Paper\r\n            style={{\r\n              padding: '20px',\r\n              background: '#FFBF55',\r\n              '&:hover': {\r\n                background: 'green'\r\n              }\r\n            }}\r\n            className={classes.paper}\r\n            onClick={() => {\r\n              handleClose('student');\r\n            }}\r\n          >\r\n            <div className={classes.box}>\r\n              <AccountBoxIcon fontSize={'large'}></AccountBoxIcon>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Student\r\n              </Typography>\r\n            </div>\r\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}></div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper\r\n            style={{ padding: '20px', background: '#FFBF55' }}\r\n            className={classes.paper}\r\n            onClick={() => {\r\n              handleClose('teacher');\r\n            }}\r\n          >\r\n            <div className={classes.box}>\r\n              <AssignmentIndIcon fontSize={'large'}></AssignmentIndIcon>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Teacher\r\n              </Typography>\r\n            </div>\r\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}></div>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","D:\\test_poc\\react\\ReactTest\\src\\common\\Header\\NavBar.jsx",["67"],"D:\\test_poc\\react\\ReactTest\\src\\redux\\subject\\type.js",[],"D:\\test_poc\\react\\ReactTest\\src\\redux\\subject\\reducer.js",[],"D:\\test_poc\\react\\ReactTest\\src\\redux\\subject\\action.js",[],"D:\\test_poc\\react\\ReactTest\\src\\utils\\react-redux-hooks.js",[],"D:\\test_poc\\react\\ReactTest\\src\\pages\\Teacher\\AddEdit.jsx",[],"D:\\test_poc\\react\\ReactTest\\src\\services\\student.service.js",[],"D:\\test_poc\\react\\ReactTest\\src\\redux\\teacher\\action.js",[],"D:\\test_poc\\react\\ReactTest\\src\\pages\\Student\\Index.jsx",[],"D:\\test_poc\\react\\ReactTest\\src\\pages\\Teacher\\Index.jsx",[],["68","69"],"D:\\test_poc\\react\\ReactTest\\src\\pages\\Student\\Detail.jsx",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":100,"column":6,"nodeType":"77","endLine":100,"endColumn":8,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":26},{"ruleId":"79","severity":1,"message":"83","line":59,"column":9,"nodeType":"81","messageId":"82","endLine":59,"endColumn":17},{"ruleId":"75","severity":1,"message":"84","line":65,"column":6,"nodeType":"77","endLine":65,"endColumn":8,"suggestions":"85"},{"ruleId":"71","replacedBy":"86"},{"ruleId":"73","replacedBy":"87"},{"ruleId":"75","severity":1,"message":"76","line":53,"column":6,"nodeType":"77","endLine":53,"endColumn":8,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initDispatch'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'listenUrlChange' and 'setBackButton'. Either include them or remove the dependency array.",["92"],["89"],["90"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"94","fix":"98"},"Update the dependencies array to be: [initDispatch]",{"range":"99","text":"100"},"Update the dependencies array to be: [listenUrlChange, setBackButton]",{"range":"101","text":"102"},{"range":"103","text":"100"},[2527,2529],"[initDispatch]",[1681,1683],"[listenUrlChange, setBackButton]",[1256,1258]]